<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booksystem.mapper.BookOrderHistoryMapper">

    <insert id="save">
        INSERT INTO book_order_history (book_id,user_id,deadline_num,is_return,return_time,create_time)
        VALUES (#{bookId},#{userId},#{deadlineNum},#{isReturn},#{returnTime},#{createTime})
    </insert>

    <update id="update">
        UPDATE book_order_history
        <set>
            <if test="isReturn != null ">
                is_return = #{isReturn},
            </if>
            <if test="returnTime != null ">
                return_time = #{returnTime},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="batchDelete" parameterType="list">
        DELETE FROM book_order_history WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


    <!--    從前端帶值並放進BookOrderHistoryQueryDto來這查詢#{userId} #{isReturn} #{isReturn}-->
    <select id="query" resultMap="BaseResultMap">
        SELECT boh.* ,b.name AS book_name,u.user_name AS user_name
        FROM book_order_history boh
        LEFT JOIN book b on b.id = boh.book_id
        LEFT JOIN user u on u.id = boh.user_id
        <where>
            <if test="userId != null">
                AND boh.user_id = #{userId}
            </if>
            <if test="bookId != null">
                AND boh.book_id = #{bookId}
            </if>
            <if test="isReturn != null">
                AND boh.is_return = #{isReturn}
            </if>
            <if test="startTime != null">
                AND boh.create_time BETWEEN #{startTime} AND #{endTime}
            </if>
        </where>
            ORDER BY boh.create_time DESC
            <if test="current != null and size != null">
            LIMIT #{current},#{size}
            </if>
    </select>


    <select id="queryCount" resultType="integer">

        SELECT COUNT(*)
        FROM book_order_history boh
        <where>
            <if test="userId != null">
                AND boh.user_id = #{userId}
            </if>
            <if test="bookId != null">
                AND boh.book_id = #{bookId}
            </if>
            <if test="isReturn != null">
                AND boh.is_return = #{isReturn}
            </if>
            <if test="startTime != null">
                AND boh.create_time BETWEEN #{startTime} AND #{endTime}
            </if>
        </where>

    </select>

    <resultMap id="BaseResultMap" type="com.booksystem.pojo.vo.BookOrderHistoryVO">
        <id column="id" property="id"/>
        <result column="book_id" property="bookId"/>
        <result column="user_id" property="userId"/>
        <result column="deadline_num" property="deadlineNum"/>
        <result column="is_return" property="isReturn"/>
        <result column="return_time" property="returnTime"/>
        <result column="create_time" property="createTime"/>
        <!--        SELECT boh.* ,b.name AS book_name,u.user_name AS user_name-->
        <!--        外鍵別張表 column="category_name"命名後的名子  property與VO表同名-->
        <result column="book_name" property="bookName"/>
        <result column="user_name" property="userName"/>


    </resultMap>
<!--    <id column="id" property="id"/>	指定 主鍵 欄位，MyBatis 會優先處理	-->
<!--    <result column="name" property="name"/>	指定普通欄位的對應關係-->
<!--    property="name" → 對應 Java 類的成員變數 (JavaBean 屬性)-->
<!--    column="name" → 對應資料庫的欄位名稱-->


</mapper>
